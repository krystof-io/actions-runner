name: Do The Docker Dew - Custom Keycloak
on:
  workflow_dispatch:
    inputs:
      provider_version:
        description: 'Version of the keycloak-twitch-provider to use'
        required: false
        default: '1.0.0-SNAPSHOT'
      keycloak_version:
        description: 'Version of the Bitnami Keycloak image to use'
        required: false
        default: '26.2.1'

env:
  MAVEN_REPO_URL: ${{ vars.MAVEN_REPO_URL }}
  MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
  MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
  MAVEN_PRIVATE_SNAPSHOT_REPO_URL: ${{ vars.MAVEN_PRIVATE_SNAPSHOT_REPO_URL }}
  MAVEN_PRIVATE_RELEASE_REPO_URL: ${{ vars.MAVEN_PRIVATE_RELEASE_REPO_URL }}    
jobs:
  build-and-push:
    runs-on: arc-runners-prod
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7

    - uses: s4u/maven-settings-action@v3.1.0
      with:
        servers: |
          [
          {"id": "private-snapshots", "username": "${{ env.MAVEN_REPO_USERNAME }}", "password": "${{ env.MAVEN_REPO_PASSWORD }}"},
          {"id": "private-releases", "username": "${{ env.MAVEN_REPO_USERNAME }}", "password": "${{ env.MAVEN_REPO_PASSWORD }}"},
          {"id": "nexus", "username": "${{ env.MAVEN_REPO_USERNAME }}", "password": "${{ env.MAVEN_REPO_PASSWORD }}"}
          ]
        mirrors: |
          [
          {"id": "nexus", "name":"nexus", "mirrorOf":"*", "url":"${{ env.MAVEN_REPO_URL }}"}
          ]
        sonatypeSnapshots: true      

    - name: Create providers directory
      run: mkdir -p keycloak/providers
      
    - name: Download Twitch provider JAR
      id: download_jar
      run: |
        PROVIDER_VERSION="${{ github.event.inputs.provider_version || '1.0.0-SNAPSHOT' }}"
        RESOLVED_VERSION=""
        
        if [[ "$PROVIDER_VERSION" == *-SNAPSHOT ]]; then
          # Handle SNAPSHOT versions
          VERSION_BASE=$(echo $PROVIDER_VERSION | sed 's/-SNAPSHOT//')
          
          # Get the latest snapshot version from maven-metadata.xml
          SNAPSHOT_VERSION=$(curl -s -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
            "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/${PROVIDER_VERSION}/maven-metadata.xml" | \
            grep -oP '<value>\K[^<]+' | tail -1)
            
          if [ -z "$SNAPSHOT_VERSION" ]; then
            echo "Could not find latest snapshot version, using ${PROVIDER_VERSION} directly"
            curl -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
              "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/${PROVIDER_VERSION}/keycloak-twitch-provider-${PROVIDER_VERSION}.jar" \
              -o keycloak/providers/keycloak-twitch-provider.jar
            RESOLVED_VERSION="${PROVIDER_VERSION}"
          else
            echo "Using snapshot version: ${SNAPSHOT_VERSION}"
            curl -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
              "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/${PROVIDER_VERSION}/keycloak-twitch-provider-${SNAPSHOT_VERSION}.jar" \
              -o keycloak/providers/keycloak-twitch-provider.jar
            RESOLVED_VERSION="${SNAPSHOT_VERSION}"
          fi
        elif [ "$PROVIDER_VERSION" = "latest" ]; then
          # Use Maven to resolve the latest version
          LATEST_VERSION=$(curl -s -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
            "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/maven-metadata.xml" | \
            grep -oP '<release>\K[^<]+' || echo "1.0.0")
            
          echo "Resolved latest version: ${LATEST_VERSION}"
          curl -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
            "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/${LATEST_VERSION}/keycloak-twitch-provider-${LATEST_VERSION}.jar" \
            -o keycloak/providers/keycloak-twitch-provider.jar
          RESOLVED_VERSION="${LATEST_VERSION}"
        else
          # Use the specified version
          curl -u "${{ env.MAVEN_REPO_USERNAME }}:${{ env.MAVEN_REPO_PASSWORD }}" \
            "${{ env.MAVEN_REPO_URL }}/io/krystof/keycloak-twitch-provider/${PROVIDER_VERSION}/keycloak-twitch-provider-${PROVIDER_VERSION}.jar" \
            -o keycloak/providers/keycloak-twitch-provider.jar
          RESOLVED_VERSION="${PROVIDER_VERSION}"
        fi
        
        # Verify the JAR was downloaded
        ls -la keycloak/providers/
        
        # Set output for use in later steps
        echo "resolved_version=${RESOLVED_VERSION}" >> $GITHUB_OUTPUT

    - name: Login to internal private docker repo
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.IMAGE_REGISTRY_HOST }}
        username: ${{ secrets.IMAGE_REGISTRY_USERNAME }}
        password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
        
    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./keycloak/Dockerfile
        push: true
        build-args: |
          KEYCLOAK_VERSION=${{ github.event.inputs.keycloak_version || '26.2.1' }}
        tags: |
          ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:latest
          ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:${{ github.event.inputs.keycloak_version || '26.2.1' }}
          ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:${{ github.sha }}
          
    - name: Output image details
      run: |
        echo "::notice::Image pushed successfully!"
        echo "::notice::Image: ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:latest"
        echo "::notice::Image: ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:${{ github.event.inputs.keycloak_version || '26.2.1' }}"
        echo "::notice::Image: ${{ vars.IMAGE_REGISTRY_HOST }}/${{ github.repository_owner }}/bitnami-keycloak:${{ github.sha }}"
        echo "::notice::Keycloak version: ${{ github.event.inputs.keycloak_version || '26.2.1' }}"
        echo "::notice::Provider version requested: ${{ github.event.inputs.provider_version || '1.0.0-SNAPSHOT' }}"
        echo "::notice::Provider version resolved: ${{ steps.download_jar.outputs.resolved_version }}"
